/**
 * generated by Xtext
 */
package org.eclipse.xtext.parsetree.formatter.formattertestlanguage2.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.eclipse.xtext.parsetree.formatter.formattertestlanguage2.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class Formattertestlanguage2FactoryImpl extends EFactoryImpl implements Formattertestlanguage2Factory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static Formattertestlanguage2Factory init()
  {
    try
    {
      Formattertestlanguage2Factory theFormattertestlanguage2Factory = (Formattertestlanguage2Factory)EPackage.Registry.INSTANCE.getEFactory(Formattertestlanguage2Package.eNS_URI);
      if (theFormattertestlanguage2Factory != null)
      {
        return theFormattertestlanguage2Factory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new Formattertestlanguage2FactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Formattertestlanguage2FactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case Formattertestlanguage2Package.ROOT: return createRoot();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Root createRoot()
  {
    RootImpl root = new RootImpl();
    return root;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Formattertestlanguage2Package getFormattertestlanguage2Package()
  {
    return (Formattertestlanguage2Package)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static Formattertestlanguage2Package getPackage()
  {
    return Formattertestlanguage2Package.eINSTANCE;
  }

} //Formattertestlanguage2FactoryImpl
